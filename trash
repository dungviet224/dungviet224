-- Fixed Advanced UI Library

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")

local AdvancedUI = {
    theme = {
        background = Color3.fromRGB(25, 25, 25),
        foreground = Color3.fromRGB(35, 35, 35),
        accent = Color3.fromRGB(0, 170, 255),
        textColor = Color3.fromRGB(255, 255, 255),
        elementBackground = Color3.fromRGB(45, 45, 45)
    }
}

-- Utility Functions
local function Tween(object, properties, duration)
    local tween = TweenService:Create(object, TweenInfo.new(duration or 0.2), properties)
    tween:Play()
    return tween
end

local function CreateElement(class, properties)
    local element = Instance.new(class)
    for property, value in pairs(properties) do
        element[property] = value
    end
    return element
end

-- Main Window Class
local Window = {}
Window.__index = Window

function AdvancedUI.new(title)
    local window = setmetatable({}, Window)
    window.title = title
    window.tabs = {}
    window.currentTab = nil
    window.dragging = false
    window.resizing = false
    
    -- Create Main GUI
    window.gui = CreateElement("ScreenGui", {
        Name = "AdvancedUI",
        Parent = CoreGui,
        ResetOnSpawn = false,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })
    
    -- Main Frame
    window.mainFrame = CreateElement("Frame", {
        Name = "MainFrame",
        Parent = window.gui,
        BackgroundColor3 = AdvancedUI.theme.background,
        BorderSizePixel = 0,
        Position = UDim2.new(0.5, -300, 0.5, -200),
        Size = UDim2.new(0, 600, 0, 400),
        ClipsDescendants = true
    })
    
    -- Title Bar
    window.titleBar = CreateElement("Frame", {
        Name = "TitleBar",
        Parent = window.mainFrame,
        BackgroundColor3 = AdvancedUI.theme.foreground,
        BorderSizePixel = 0,
        Size = UDim2.new(1, 0, 0, 30)
    })
    
    -- Title Text
    window.titleText = CreateElement("TextLabel", {
        Name = "Title",
        Parent = window.titleBar,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 10, 0, 0),
        Size = UDim2.new(1, -20, 1, 0),
        Font = Enum.Font.GothamBold,
        Text = title,
        TextColor3 = AdvancedUI.theme.textColor,
        TextSize = 14,
        TextXAlignment = Enum.TextXAlignment.Left
    })
    
    -- Tab Container
    window.tabContainer = CreateElement("Frame", {
        Name = "TabContainer",
        Parent = window.mainFrame,
        BackgroundColor3 = AdvancedUI.theme.foreground,
        BorderSizePixel = 0,
        Position = UDim2.new(0, 0, 0, 30),
        Size = UDim2.new(0, 150, 1, -30)
    })
    
    -- Tab List
    window.tabList = CreateElement("ScrollingFrame", {
        Name = "TabList",
        Parent = window.tabContainer,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 0, 0, 5),
        Size = UDim2.new(1, 0, 1, -10),
        CanvasSize = UDim2.new(0, 0, 0, 0),
        ScrollBarThickness = 2,
        ScrollBarImageColor3 = AdvancedUI.theme.accent
    })
    
    -- Tab Content Container
    window.contentContainer = CreateElement("Frame", {
        Name = "ContentContainer",
        Parent = window.mainFrame,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 150, 0, 30),
        Size = UDim2.new(1, -150, 1, -30),
        ClipsDescendants = true
    })
    
    -- Resize Handle
    window.resizeHandle = CreateElement("TextButton", {
        Name = "ResizeHandle",
        Parent = window.mainFrame,
        BackgroundTransparency = 1,
        Position = UDim2.new(1, -20, 1, -20),
        Size = UDim2.new(0, 20, 0, 20),
        Text = "âŸŠ",
        TextColor3 = AdvancedUI.theme.accent,
        Font = Enum.Font.GothamBold,
        TextSize = 14,
        ZIndex = 10
    })
    
    -- Make Window Draggable
    local dragStart, startPos
    window.titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            window.dragging = true
            dragStart = input.Position
            startPos = window.mainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if window.dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            window.mainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        elseif window.resizing and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - window.resizeStart
            local newSize = window.startSize + Vector2.new(delta.X, delta.Y)
            window.mainFrame.Size = UDim2.new(0, math.max(400, newSize.X), 0, math.max(300, newSize.Y))
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            window.dragging = false
            window.resizing = false
        end
    end)
    
    -- Make Window Resizable
    window.resizeHandle.MouseButton1Down:Connect(function()
        window.resizing = true
        window.resizeStart = UserInputService:GetMouseLocation()
        window.startSize = Vector2.new(window.mainFrame.AbsoluteSize.X, window.mainFrame.AbsoluteSize.Y)
    end)
    
    -- Apply Corners
    local function ApplyCorners(instance, radius)
        CreateElement("UICorner", {
            CornerRadius = UDim.new(0, radius or 5),
            Parent = instance
        })
    end
    
    ApplyCorners(window.mainFrame, 8)
    ApplyCorners(window.tabContainer, 8)
    
    return window
end

-- Other functionalities remain unchanged.
return AdvancedUI
