local Library = {}

-- Utility function to create UI elements
function Library:CreateElement(type, properties)
    local element = Instance.new(type)
    for property, value in pairs(properties) do
        element[property] = value
    end
    return element
end

-- Create a window (main container)
function Library:CreateWindow(name)
    local window = self:CreateElement("ScreenGui", {
        Name = name,
        Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    })

    local mainFrame = self:CreateElement("Frame", {
        Name = "MainFrame",
        Parent = window,
        Size = UDim2.new(0, 300, 0, 400),
        Position = UDim2.new(0.5, -150, 0.5, -200),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        ClipsDescendants = true
    })

    local title = self:CreateElement("TextLabel", {
        Name = "Title",
        Parent = mainFrame,
        Size = UDim2.new(1, 0, 0, 30),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        Text = name,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 18,
        Font = Enum.Font.SourceSansBold
    })

    local tabContainer = self:CreateElement("Frame", {
        Name = "TabContainer",
        Parent = mainFrame,
        Size = UDim2.new(1, 0, 0, 30),
        Position = UDim2.new(0, 0, 0, 30),
        BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    })

    local contentContainer = self:CreateElement("Frame", {
        Name = "ContentContainer",
        Parent = mainFrame,
        Size = UDim2.new(1, 0, 1, -60),
        Position = UDim2.new(0, 0, 0, 60),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    })

    return {
        Window = window,
        MainFrame = mainFrame,
        TabContainer = tabContainer,
        ContentContainer = contentContainer
    }
end

-- Create a tab
function Library:CreateTab(window, name)
    local tabButton = self:CreateElement("TextButton", {
        Name = name,
        Parent = window.TabContainer,
        Size = UDim2.new(0.5, 0, 1, 0),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = Color3.fromRGB(60, 60, 60),
        Text = name,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14,
        Font = Enum.Font.SourceSans
    })

    local tabContent = self:CreateElement("Frame", {
        Name = name .. "Content",
        Parent = window.ContentContainer,
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        Visible = false
    })

    tabButton.MouseButton1Click:Connect(function()
        for _, child in ipairs(window.ContentContainer:GetChildren()) do
            child.Visible = false
        end
        tabContent.Visible = true
    end)

    return tabContent
end

-- Create a button
function Library:CreateButton(parent, name, callback)
    local button = self:CreateElement("TextButton", {
        Name = name,
        Parent = parent,
        Size = UDim2.new(0.8, 0, 0, 30),
        Position = UDim2.new(0.1, 0, 0, 0),
        BackgroundColor3 = Color3.fromRGB(70, 70, 70),
        Text = name,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14,
        Font = Enum.Font.SourceSans
    })

    button.MouseButton1Click:Connect(callback)
    return button
end

-- Create a textbox
function Library:CreateTextBox(parent, placeholder)
    local textBox = self:CreateElement("TextBox", {
        Name = "TextBox",
        Parent = parent,
        Size = UDim2.new(0.8, 0, 0, 30),
        Position = UDim2.new(0.1, 0, 0, 40),
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        Text = "",
        PlaceholderText = placeholder,
        TextColor3 = Color3.fromRGB(0, 0, 0),
        TextSize = 14,
        Font = Enum.Font.SourceSans
    })

    return textBox
end

-- Create a dropdown
function Library:CreateDropdown(parent, options)
    local dropdown = self:CreateElement("TextButton", {
        Name = "Dropdown",
        Parent = parent,
        Size = UDim2.new(0.8, 0, 0, 30),
        Position = UDim2.new(0.1, 0, 0, 80),
        BackgroundColor3 = Color3.fromRGB(80, 80, 80),
        Text = "Select an option",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14,
        Font = Enum.Font.SourceSans
    })

    local dropdownFrame = self:CreateElement("Frame", {
        Name = "DropdownFrame",
        Parent = parent,
        Size = UDim2.new(0.8, 0, 0, 0),
        Position = UDim2.new(0.1, 0, 0, 110),
        BackgroundColor3 = Color3.fromRGB(60, 60, 60),
        Visible = false
    })

    dropdown.MouseButton1Click:Connect(function()
        dropdownFrame.Visible = not dropdownFrame.Visible
        dropdownFrame.Size = UDim2.new(0.8, 0, 0, #options * 30)
    end)

    for i, option in ipairs(options) do
        local optionButton = self:CreateElement("TextButton", {
            Name = option,
            Parent = dropdownFrame,
            Size = UDim2.new(1, 0, 0, 30),
            Position = UDim2.new(0, 0, 0, (i - 1) * 30),
            BackgroundColor3 = Color3.fromRGB(70, 70, 70),
            Text = option,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            TextSize = 14,
            Font = Enum.Font.SourceSans
        })

        optionButton.MouseButton1Click:Connect(function()
            dropdown.Text = option
            dropdownFrame.Visible = false
        end)
    end

    return dropdown
end

-- Simple animation (fade in/out)
function Library:AnimateFade(element, duration, transparency)
    local startTransparency = element.BackgroundTransparency
    local step = (transparency - startTransparency) / (duration * 60)

    for i = 1, duration * 60 do
        element.BackgroundTransparency = element.BackgroundTransparency + step
        wait(1 / 60)
    end
end

return Library
