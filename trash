local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local Library = {}
Library.__index = Library
Library.ToggleUI = Enum.KeyCode.RightControl -- Phím tắt mặc định
Library.Draggable = true -- Cho phép kéo thả
Library.MinimizeKey = Enum.KeyCode.M -- Phím tắt thu nhỏ
Library.Theme = {
    Background = Color3.fromRGB(30, 30, 30),
    Header = Color3.fromRGB(40, 40, 40),
    Text = Color3.fromRGB(255, 255, 255),
    Button = Color3.fromRGB(40, 40, 40),
    ButtonHover = Color3.fromRGB(50, 50, 50),
    Toggle = Color3.fromRGB(60, 120, 255),
    Slider = Color3.fromRGB(60, 120, 255)
}

-- Tạo khung UI chính
function Library:CreateWindow(title)
    local window = Instance.new("ScreenGui")
    local main = Instance.new("Frame")
    local header = Instance.new("Frame")
    local minimize = Instance.new("TextButton")
    local title = Instance.new("TextLabel")
    local tabContainer = Instance.new("Frame")
    local contentContainer = Instance.new("Frame")

    -- Cài đặt ScreenGui
    if syn and syn.protect_gui then
        syn.protect_gui(window)
        window.Parent = CoreGui
    else
        window.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    end
    window.Name = "UILibrary"
    window.ResetOnSpawn = false
    window.DisplayOrder = 999

    -- Thiết lập main frame
    main.Name = "Main"
    main.Size = UDim2.new(0, 450, 0, 350)
    main.Position = UDim2.new(0.5, -225, 0.5, -175)
    main.BackgroundColor3 = Library.Theme.Background
    main.BorderSizePixel = 0
    main.ClipsDescendants = true
    main.Parent = window

    -- Tạo hiệu ứng bo góc
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = main

    -- Header với nút minimize
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 30)
    header.BackgroundColor3 = Library.Theme.Header
    header.BorderSizePixel = 0
    header.Parent = main

    minimize.Name = "Minimize"
    minimize.Size = UDim2.new(0, 30, 0, 30)
    minimize.Position = UDim2.new(1, -30, 0, 0)
    minimize.BackgroundTransparency = 1
    minimize.Text = "-"
    minimize.TextColor3 = Library.Theme.Text
    minimize.TextSize = 20
    minimize.Font = Enum.Font.GothamBold
    minimize.Parent = header

    title.Name = "Title"
    title.Size = UDim2.new(1, -60, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = title
    title.TextColor3 = Library.Theme.Text
    title.TextSize = 14
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header

    -- Container cho tabs và content
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(0, 120, 1, -30)
    tabContainer.Position = UDim2.new(0, 0, 0, 30)
    tabContainer.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    tabContainer.BorderSizePixel = 0
    tabContainer.Parent = main

    contentContainer.Name = "ContentContainer"
    contentContainer.Size = UDim2.new(1, -120, 1, -30)
    contentContainer.Position = UDim2.new(0, 120, 0, 30)
    contentContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    contentContainer.BorderSizePixel = 0
    contentContainer.Parent = main

    -- Thêm chức năng kéo thả
    if Library.Draggable then
        local dragging = false
        local dragInput
        local dragStart
        local startPos

        header.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = main.Position
            end
        end)

        header.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
    end

    -- Thêm chức năng thu nhỏ
    local minimized = false
    minimize.MouseButton1Click:Connect(function()
        minimized = not minimized
        local targetSize = minimized and UDim2.new(1, 0, 0, 30) or UDim2.new(1, 0, 1, 0)
        TweenService:Create(main, TweenInfo.new(0.3), {Size = targetSize}):Play()
        minimize.Text = minimized and "+" or "-"
    end)

    -- Thêm phím tắt ẩn/hiện UI
    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Library.ToggleUI then
            window.Enabled = not window.Enabled
        elseif input.KeyCode == Library.MinimizeKey and not minimized then
            minimized = not minimized
            local targetSize = minimized and UDim2.new(1, 0, 0, 30) or UDim2.new(1, 0, 1, 0)
            TweenService:Create(main, TweenInfo.new(0.3), {Size = targetSize}):Play()
            minimize.Text = minimized and "+" or "-"
        end
    end)

    -- Tạo khung chứa thông báo
    local notificationFrame = Instance.new("Frame")
    notificationFrame.Name = "NotificationFrame"
    notificationFrame.Size = UDim2.new(0, 200, 0, 0)
    notificationFrame.Position = UDim2.new(1, -220, 0, 20)
    notificationFrame.BackgroundTransparency = 1
    notificationFrame.Parent = window

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 5)
    layout.Parent = notificationFrame

    return {
        Window = window,
        Main = main,
        TabContainer = tabContainer,
        ContentContainer = contentContainer,
        Tabs = {},
        NotificationFrame = notificationFrame
    }
end

-- Thêm chức năng tạo thông báo
function Library:CreateNotification(title, message, duration)
    duration = duration or 3
    
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(1, 0, 0, 60)
    notification.BackgroundColor3 = Library.Theme.Header
    notification.BorderSizePixel = 0
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = notification
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -10, 0, 25)
    titleLabel.Position = UDim2.new(0, 5, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Library.Theme.Text
    titleLabel.TextSize = 14
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = notification
    
    local messageLabel = Instance.new("TextLabel")
    messageLabel.Size = UDim2.new(1, -10, 0, 25)
    messageLabel.Position = UDim2.new(0, 5, 0, 30)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = message
    messageLabel.TextColor3 = Library.Theme.Text
    messageLabel.TextSize = 12
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.Parent = notification
    
    notification.Parent = self.NotificationFrame
    
    -- Animation hiển thị
    notification.Position = UDim2.new(1, 0, 0, 0)
    local showTween = TweenService:Create(notification, TweenInfo.new(0.3), {Position = UDim2.new(0, 0, 0, 0)})
    showTween:Play()
    
    -- Xóa thông báo sau duration
    delay(duration, function()
        local hideTween = TweenService:Create(notification, TweenInfo.new(0.3), {Position = UDim2.new(1, 0, 0, 0)})
        hideTween:Play()
        hideTween.Completed:Wait()
        notification:Destroy()
    end)
end

-- Các hàm còn lại giữ nguyên như cũ...
[Previous functions: CreateTab, CreateButton, CreateSlider, CreateToggle]

-- Thêm chức năng tạo textbox
function Library:CreateTextbox(tab, text, placeholder, callback)
    local textboxContainer = Instance.new("Frame")
    local textboxLabel = Instance.new("TextLabel")
    local textbox = Instance.new("TextBox")
    
    textboxContainer.Name = text.."TextboxContainer"
    textboxContainer.Size = UDim2.new(1, 0, 0, 40)
    textboxContainer.BackgroundTransparency = 1
    textboxContainer.Parent = tab
    
    textboxLabel.Name = "Label"
    textboxLabel.Size = UDim2.new(1, 0, 0, 20)
    textboxLabel.BackgroundTransparency = 1
    textboxLabel.Text = text
    textboxLabel.TextColor3 = Library.Theme.Text
    textboxLabel.TextSize = 14
    textboxLabel.Font = Enum.Font.Gotham
    textboxLabel.TextXAlignment = Enum.TextXAlignment.Left
    textboxLabel.Parent = textboxContainer
    
    textbox.Name = "Input"
    textbox.Size = UDim2.new(1, 0, 0, 20)
    textbox.Position = UDim2.new(0, 0, 0, 20)
    textbox.BackgroundColor3 = Library.Theme.Button
    textbox.BorderSizePixel = 0
    textbox.Text = ""
    textbox.PlaceholderText = placeholder
    textbox.TextColor3 = Library.Theme.Text
    textbox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    textbox.TextSize = 12
    textbox.Font = Enum.Font.Gotham
    textbox.Parent = textboxContainer
    
    textbox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(textbox.Text)
        end
    end)
    
    return textbox
end
-- Fixing and completing the CreateDropdown function
function Library:CreateDropdown(tab, text, options, callback)
    local dropdownContainer = Instance.new("Frame")
    local dropdownLabel = Instance.new("TextLabel")
    local dropdownButton = Instance.new("TextButton")
    local optionsFrame = Instance.new("Frame")
    local layout = Instance.new("UIListLayout")
    
    dropdownContainer.Name = text.."DropdownContainer"
    dropdownContainer.Size = UDim2.new(1, 0, 0, 60)
    dropdownContainer.BackgroundTransparency = 1
    dropdownContainer.Parent = tab
    
    dropdownLabel.Name = "Label"
    dropdownLabel.Size = UDim2.new(1, 0, 0, 20)
    dropdownLabel.BackgroundTransparency = 1
    dropdownLabel.Text = text
    dropdownLabel.TextColor3 = Library.Theme.Text
    dropdownLabel.TextSize = 14
    dropdownLabel.Font = Enum.Font.Gotham
    dropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
    dropdownLabel.Parent = dropdownContainer
    
    dropdownButton.Name = "Button"
    dropdownButton.Size = UDim2.new(1, 0, 0, 30)
    dropdownButton.Position = UDim2.new(0, 0, 0, 20)
    dropdownButton.BackgroundColor3 = Library.Theme.Button
    dropdownButton.BorderSizePixel = 0
    dropdownButton.Text = "Select..."
    dropdownButton.TextColor3 = Library.Theme.Text
    dropdownButton.TextSize = 12
    dropdownButton.Font = Enum.Font.Gotham
    dropdownButton.Parent = dropdownContainer
    
    optionsFrame.Name = "Options"
    optionsFrame.Size = UDim2.new(1, 0, 0, 0)
    optionsFrame.Position = UDim2.new(0, 0, 1, 0)
    optionsFrame.BackgroundColor3 = Library.Theme.Button
    optionsFrame.BorderSizePixel = 0
    optionsFrame.ClipsDescendants = true
    optionsFrame.Visible = false
    optionsFrame.Parent = dropdownButton
    
    layout.Padding = UDim.new(0, 2)
    layout.Parent = optionsFrame
    
    local isOpen = false
    
    -- Add corner radius to dropdown
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = dropdownButton
    
    local optionsCorner = Instance.new("UICorner")
    optionsCorner.CornerRadius = UDim.new(0, 4)
    optionsCorner.Parent = optionsFrame
    
    -- Create option buttons
    for i, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Name = option
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.BackgroundColor3 = Library.Theme.Button
        optionButton.BorderSizePixel = 0
        optionButton.Text = option
        optionButton.TextColor3 = Library.Theme.Text
        optionButton.TextSize = 12
        optionButton.Font = Enum.Font.Gotham
        optionButton.Parent = optionsFrame
        
        -- Add hover effect
        optionButton.MouseEnter:Connect(function()
            TweenService:Create(optionButton, TweenInfo.new(0.2), {
                BackgroundColor3 = Library.Theme.ButtonHover
            }):Play()
        end)
        
        optionButton.MouseLeave:Connect(function()
            TweenService:Create(optionButton, TweenInfo.new(0.2), {
                BackgroundColor3 = Library.Theme.Button
            }):Play()
        end)
        
        optionButton.MouseButton1Click:Connect(function()
            dropdownButton.Text = option
            isOpen = false
            TweenService:Create(optionsFrame, TweenInfo.new(0.2), {
                Size = UDim2.new(1, 0, 0, 0)
            }):Play()
            task.wait(0.2)
            optionsFrame.Visible = false
            if callback then
                callback(option)
            end
        end)
    end
    
    -- Toggle dropdown
    dropdownButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        if isOpen then
            optionsFrame.Visible = true
            TweenService:Create(optionsFrame, TweenInfo.new(0.2), {
                Size = UDim2.new(1, 0, 0, #options * 32)
            }):Play()
        else
            TweenService:Create(optionsFrame, TweenInfo.new(0.2), {
                Size = UDim2.new(1, 0, 0, 0)
            }):Play()
            task.wait(0.2)
            optionsFrame.Visible = false
        end
    end)
    
    -- Close dropdown when clicking outside
    UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local mousePosition = UserInputService:GetMouseLocation()
            local dropdownPosition = dropdownButton.AbsolutePosition
            local dropdownSize = dropdownButton.AbsoluteSize
            local optionsPosition = optionsFrame.AbsolutePosition
            local optionsSize = optionsFrame.AbsoluteSize
            
            if isOpen and not (
                mousePosition.X >= dropdownPosition.X and
                mousePosition.X <= dropdownPosition.X + dropdownSize.X and
                mousePosition.Y >= dropdownPosition.Y and
                mousePosition.Y <= dropdownPosition.Y + dropdownSize.Y + optionsSize.Y
            ) then
                isOpen = false
                TweenService:Create(optionsFrame, TweenInfo.new(0.2), {
                    Size = UDim2.new(1, 0, 0, 0)
                }):Play()
                task.wait(0.2)
                optionsFrame.Visible = false
            end
        end
    end)
    
    return dropdownContainer
end
