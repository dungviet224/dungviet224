local Library = {}
Library.__index = Library

-- Các dịch vụ cần thiết
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- Các biến cấu hình
Library.ToggleKey = Enum.KeyCode.RightControl
Library.MinimizeKey = Enum.KeyCode.M
Library.Colors = {
    Background = Color3.fromRGB(25, 25, 25),
    Section = Color3.fromRGB(30, 30, 30),
    Text = Color3.fromRGB(255, 255, 255),
    Border = Color3.fromRGB(40, 40, 40),
    Enabled = Color3.fromRGB(0, 255, 140),
    Disabled = Color3.fromRGB(255, 40, 40)
}

-- Bảo vệ UI khỏi bị xóa
local function protectGui(gui)
    if syn and syn.protect_gui then
        syn.protect_gui(gui)
        gui.Parent = CoreGui
    elseif gethui then
        gui.Parent = gethui()
    else
        gui.Parent = CoreGui
    end
end

-- Hàm tạo tween an toàn
local function safeTween(object, info, properties)
    if not object or not object.Parent then return end
    local tween = TweenService:Create(object, TweenInfo.new(info.Time or 0.3), properties)
    tween:Play()
    return tween
end

function Library:CreateWindow(title)
    local window = Instance.new("ScreenGui")
    local main = Instance.new("Frame")
    local dragFrame = Instance.new("Frame")
    local titleText = Instance.new("TextLabel")
    local closeBtn = Instance.new("TextButton")
    local minimizeBtn = Instance.new("TextButton")
    local tabContainer = Instance.new("Frame")
    local contentContainer = Instance.new("Frame")
    
    -- Thiết lập window
    window.Name = "UILibrary_" .. tostring(math.random(1000000, 9999999))
    window.DisplayOrder = 100
    window.ResetOnSpawn = false
    protectGui(window)

    -- Main frame
    main.Name = "Main"
    main.Size = UDim2.new(0, 500, 0, 350)
    main.Position = UDim2.new(0.5, -250, 0.5, -175)
    main.BackgroundColor3 = Library.Colors.Background
    main.BorderSizePixel = 0
    main.ClipsDescendants = true
    main.Parent = window

    -- Tạo shadow và corner
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = main

    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.BackgroundTransparency = 1
    shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.Image = "rbxassetid://5554236805"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.6
    shadow.Parent = main

    -- Drag frame
    dragFrame.Name = "DragFrame"
    dragFrame.Size = UDim2.new(1, 0, 0, 30)
    dragFrame.BackgroundColor3 = Library.Colors.Section
    dragFrame.BorderSizePixel = 0
    dragFrame.Parent = main

    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -60, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = title or "UI Library"
    titleText.TextColor3 = Library.Colors.Text
    titleText.TextSize = 14
    titleText.Font = Enum.Font.GothamBold
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Parent = dragFrame

    -- Close button
    closeBtn.Name = "Close"
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -30, 0, 0)
    closeBtn.BackgroundTransparency = 1
    closeBtn.Text = "×"
    closeBtn.TextColor3 = Library.Colors.Text
    closeBtn.TextSize = 20
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.Parent = dragFrame

    -- Minimize button
    minimizeBtn.Name = "Minimize"
    minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
    minimizeBtn.Position = UDim2.new(1, -60, 0, 0)
    minimizeBtn.BackgroundTransparency = 1
    minimizeBtn.Text = "-"
    minimizeBtn.TextColor3 = Library.Colors.Text
    minimizeBtn.TextSize = 20
    minimizeBtn.Font = Enum.Font.GothamBold
    minimizeBtn.Parent = dragFrame

    -- Container cho tabs
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(0, 130, 1, -30)
    tabContainer.Position = UDim2.new(0, 0, 0, 30)
    tabContainer.BackgroundColor3 = Library.Colors.Section
    tabContainer.BorderSizePixel = 0
    tabContainer.Parent = main

    -- Container cho nội dung
    contentContainer.Name = "ContentContainer"
    contentContainer.Size = UDim2.new(1, -130, 1, -30)
    contentContainer.Position = UDim2.new(0, 130, 0, 30)
    contentContainer.BackgroundColor3 = Library.Colors.Background
    contentContainer.BorderSizePixel = 0
    contentContainer.Parent = main

    -- Xử lý kéo thả
    local dragging, dragInput, dragStart, startPos
    dragFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = main.Position
        end
    end)

    dragFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Xử lý đóng/mở
    local minimized = false
    local closed = false

    closeBtn.MouseButton1Click:Connect(function()
        window:Destroy()
    end)

    minimizeBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            main:TweenSize(UDim2.new(0, 500, 0, 30), "Out", "Quad", 0.3, true)
        else
            main:TweenSize(UDim2.new(0, 500, 0, 350), "Out", "Quad", 0.3, true)
        end
    end)

    -- Phím tắt
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed then
            if input.KeyCode == Library.ToggleKey then
                closed = not closed
                window.Enabled = not closed
            elseif input.KeyCode == Library.MinimizeKey then
                minimized = not minimized
                if minimized then
                    main:TweenSize(UDim2.new(0, 500, 0, 30), "Out", "Quad", 0.3, true)
                else
                    main:TweenSize(UDim2.new(0, 500, 0, 350), "Out", "Quad", 0.3, true)
                end
            end
        end
    end)

    return {
        Window = window,
        Main = main,
        TabContainer = tabContainer,
        ContentContainer = contentContainer,
        Tabs = {}
    }
end

function Library:CreateTab(window, name)
    local tabButton = Instance.new("TextButton")
    local tabContent = Instance.new("ScrollingFrame")
    
    -- Thiết lập tab button
    tabButton.Name = name.."Tab"
    tabButton.Size = UDim2.new(1, 0, 0, 30)
    tabButton.BackgroundColor3 = Library.Colors.Section
    tabButton.BorderSizePixel = 0
    tabButton.Text = name
    tabButton.TextColor3 = Library.Colors.Text
    tabButton.TextSize = 14
    tabButton.Font = Enum.Font.Gotham
    tabButton.Parent = window.TabContainer
    
    -- Bố trí các tab buttons
    local tabCount = #window.TabContainer:GetChildren()
    tabButton.Position = UDim2.new(0, 0, 0, (tabCount - 1) * 30)

    -- Thiết lập tab content
    tabContent.Name = name.."Content"
    tabContent.Size = UDim2.new(1, -10, 1, -10)
    tabContent.Position = UDim2.new(0, 5, 0, 5)
    tabContent.BackgroundTransparency = 1
    tabContent.BorderSizePixel = 0
    tabContent.ScrollBarThickness = 3
    tabContent.ScrollBarImageColor3 = Library.Colors.Border
    tabContent.Visible = tabCount == 1
    tabContent.Parent = window.ContentContainer

    -- Auto-size content
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 5)
    layout.Parent = tabContent

    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tabContent.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
    end)

    -- Tab switching
    tabButton.MouseButton1Click:Connect(function()
        for _, tab in pairs(window.ContentContainer:GetChildren()) do
            if tab:IsA("ScrollingFrame") then
                tab.Visible = tab == tabContent
            end
        end
        
        for _, btn in pairs(window.TabContainer:GetChildren()) do
            if btn:IsA("TextButton") then
                btn.BackgroundColor3 = btn == tabButton and Library.Colors.Border or Library.Colors.Section
            end
        end
    end)

    return tabContent
end

function Library:CreateButton(tab, text, callback)
    local button = Instance.new("TextButton")
    
    button.Name = text.."Button"
    button.Size = UDim2.new(1, -10, 0, 30)
    button.BackgroundColor3 = Library.Colors.Section
    button.BorderSizePixel = 0
    button.Text = text
    button.TextColor3 = Library.Colors.Text
    button.TextSize = 14
    button.Font = Enum.Font.Gotham
    button.Parent = tab
    
    -- Corner radius
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = button
    
    -- Click effect
    button.MouseButton1Down:Connect(function()
        safeTween(button, {Time = 0.1}, {BackgroundColor3 = Library.Colors.Border})
    end)
    
    button.MouseButton1Up:Connect(function()
        safeTween(button, {Time = 0.1}, {BackgroundColor3 = Library.Colors.Section})
    end)
    
    button.MouseButton1Click:Connect(function()
        callback()
    end)
    
    return button
end

function Library:CreateToggle(tab, text, default, callback)
    local toggleContainer = Instance.new("Frame")
    local label = Instance.new("TextLabel")
    local toggle = Instance.new("TextButton")
    local enabled = default or false
    
    toggleContainer.Name = text.."ToggleContainer"
    toggleContainer.Size = UDim2.new(1, -10, 0, 30)
    toggleContainer.BackgroundTransparency = 1
    toggleContainer.Parent = tab
    
    label.Size = UDim2.new(1, -50, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Library.Colors.Text
    label.TextSize = 14
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleContainer
    
    toggle.Name = "Toggle"
    toggle.Size = UDim2.new(0, 40, 0, 20)
    toggle.Position = UDim2.new(1, -40, 0.5, -10)
    toggle.BackgroundColor3 = enabled and Library.Colors.Enabled or Library.Colors.Disabled
    toggle.BorderSizePixel = 0
    toggle.Text = ""
    toggle.Parent = toggleContainer
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = toggle
    
    toggle.MouseButton1Click:Connect(function()
        enabled = not enabled
        safeTween(toggle, {Time = 0.2}, {BackgroundColor3 = enabled and Library.Colors.Enabled or Library.Colors.Disabled})
        callback(enabled)
    end)
    
    return toggle
end

function Library:CreateSlider(tab, text, min, max, default, callback)
    local sliderContainer = Instance.new("Frame")
    local label = Instance.new("TextLabel")
    local sliderBar = Instance.new("Frame")
    local sliderFill = Instance.new("Frame")
    local sliderButton = Instance.new("TextButton")
    local valueLabel = Instance.new("TextLabel")
    
    local value = default or min
    local dragging = false
    
    sliderContainer.Name = text.."SliderContainer"
    sliderContainer.Size = UDim2.new(1, -10, 0, 45)
    sliderContainer.BackgroundTransparency = 1
    sliderContainer.Parent = tab
    
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Library.Colors.Text
